{***********************************************
Music Handyman Kontakt
Author: Native Instruments
Written by: Yaron Eshkar
Modified: July 27 2021
*************************************************}

on init

	message("")
	set_ui_height(7)
	make_perfview

	declare $i
	declare $x

	declare $labelWidth := 150
	declare $labelHeight := 18

{MIR}

   set_num_user_zones(1)  

   declare $dndWidth := 100
   declare $dndHeight := 100
   declare $dndX := 375
   declare $dndY := 150

   declare ~pitch
   declare ~rms
   declare ~peak
   declare ~loudness
   declare $sample_type
   declare $drum_type
   declare $instrument_type
   declare @sample_path

   declare !mirDrumTypesStrings[10]
   !mirDrumTypesStrings[0] := "Kick"
   !mirDrumTypesStrings[1] := "Snare"
   !mirDrumTypesStrings[2] := "C Hat"
   !mirDrumTypesStrings[3] := "O Hat"
   !mirDrumTypesStrings[4] := "Tom"
   !mirDrumTypesStrings[5] := "Cymbal"
   !mirDrumTypesStrings[6] := "Clap"
   !mirDrumTypesStrings[7] := "Shaker"
   !mirDrumTypesStrings[8] := "Drum"
   !mirDrumTypesStrings[9] := "Other"

   declare !mirInstrumentTypesStrings[12]
   !mirInstrumentTypesStrings[0] := "Bass"
   !mirInstrumentTypesStrings[1] := "Bowed"
   !mirInstrumentTypesStrings[2] := "Brass"
   !mirInstrumentTypesStrings[3] := "Flute"
   !mirInstrumentTypesStrings[4] := "Guitar"
   !mirInstrumentTypesStrings[5] := "Keyboard"
   !mirInstrumentTypesStrings[6] := "Mallet"
   !mirInstrumentTypesStrings[7] := "Organ"
   !mirInstrumentTypesStrings[8] := "Plucked String"
   !mirInstrumentTypesStrings[9] := "Reed"
   !mirInstrumentTypesStrings[10] := "Synth"
   !mirInstrumentTypesStrings[11] := "Vocal"

	declare ui_label $mirLabel (1,1)
		set_control_par (get_ui_id($mirLabel),$CONTROL_PAR_WIDTH,250)
		set_control_par (get_ui_id($mirLabel),$CONTROL_PAR_HEIGHT,$labelHeight)	
		set_control_par (get_ui_id($mirLabel),$CONTROL_PAR_TEXT_ALIGNMENT,1)
		set_text($mirLabel, "MIR")
		move_control_px($mirLabel, 375, 130)

   	declare ui_waveform $waveViewA($dndWidth,$dndHeight)  
      set_control_par(get_ui_id($waveViewA), $CONTROL_PAR_WIDTH,$dndWidth)
      set_control_par(get_ui_id($waveViewA), $CONTROL_PAR_HEIGHT,$dndHeight)
      move_control_px($waveViewA, $dndX,$dndY)

	declare ui_mouse_area $waveDndA
		set_control_par(get_ui_id($waveDndA),$CONTROL_PAR_DND_ACCEPT_AUDIO, $NI_DND_ACCEPT_ONE)
		set_control_par(get_ui_id($waveDndA), $CONTROL_PAR_WIDTH,$dndWidth)
		set_control_par(get_ui_id($waveDndA), $CONTROL_PAR_HEIGHT,$dndHeight)
		move_control_px($waveDndA, $dndX,$dndY)

	declare ui_label $mirType (1,1)
		set_control_par (get_ui_id($mirType),$CONTROL_PAR_WIDTH,$labelWidth)
		set_control_par (get_ui_id($mirType),$CONTROL_PAR_HEIGHT,$labelHeight)
		move_control_px($mirType, 475, 150)

	declare ui_label $mirPitch (1,1)
		set_control_par (get_ui_id($mirPitch),$CONTROL_PAR_WIDTH,$labelWidth)
		set_control_par (get_ui_id($mirPitch),$CONTROL_PAR_HEIGHT,$labelHeight)
		move_control_px($mirPitch, 475, 170)

	declare ui_label $mirPeak (1,1)
		set_control_par (get_ui_id($mirPeak),$CONTROL_PAR_WIDTH,$labelWidth)
		set_control_par (get_ui_id($mirPeak),$CONTROL_PAR_HEIGHT,$labelHeight)
		move_control_px($mirPeak, 475, 190)

	declare ui_label $mirRMS (1,1)
		set_control_par (get_ui_id($mirRMS),$CONTROL_PAR_WIDTH,$labelWidth)
		set_control_par (get_ui_id($mirRMS),$CONTROL_PAR_HEIGHT,$labelHeight)
		move_control_px($mirRMS, 475, 210)

	declare ui_label $mirLoudness (1,1)
		set_control_par (get_ui_id($mirLoudness),$CONTROL_PAR_WIDTH,$labelWidth)
		set_control_par (get_ui_id($mirLoudness),$CONTROL_PAR_HEIGHT,$labelHeight)
		move_control_px($mirLoudness, 475, 230)

	attach_zone ($waveViewA,0,0)	

{Calculator}
{-------------------------------------------------------------------------}
{-------------------------------------------------------------------------}
{-------------------------------------------------------------------------}

	declare ui_label $scriptLabel (1,1)
		set_control_par (get_ui_id($scriptLabel),$CONTROL_PAR_WIDTH,450)
		set_control_par (get_ui_id($scriptLabel),$CONTROL_PAR_HEIGHT,$labelHeight)
		set_control_par (get_ui_id($scriptLabel),$CONTROL_PAR_TEXT_ALIGNMENT,1)
		set_text($scriptLabel, "Music Handyman Kontakt")
		move_control_px($scriptLabel, 75, 10)

	declare ui_label $calcLabel (1,1)
		set_control_par (get_ui_id($calcLabel),$CONTROL_PAR_WIDTH,450)
		set_control_par (get_ui_id($calcLabel),$CONTROL_PAR_HEIGHT,$labelHeight)
		set_control_par (get_ui_id($calcLabel),$CONTROL_PAR_TEXT_ALIGNMENT,1)
		set_text($calcLabel, "Music Calculator")
		move_control_px($calcLabel, 75, 30)

	declare ui_slider $bpmSlider (10,250)
		move_control_px($bpmSlider, 75, 50)
		make_persistent($bpmSlider)

	declare ui_label $bpmLabel (1,1)
		set_control_par (get_ui_id($bpmLabel),$CONTROL_PAR_WIDTH,$labelWidth)
		set_control_par (get_ui_id($bpmLabel),$CONTROL_PAR_HEIGHT,$labelHeight)
		move_control_px($bpmLabel, 175, 50)

	declare ui_slider $divisionSlider (0,21)
		move_control_px($divisionSlider, 75, 70)
		make_persistent($divisionSlider)		

	declare ui_label $divisionLabel (1,1)
		set_control_par (get_ui_id($divisionLabel),$CONTROL_PAR_WIDTH,$labelWidth)
		set_control_par (get_ui_id($divisionLabel),$CONTROL_PAR_HEIGHT,$labelHeight)
		move_control_px($divisionLabel, 175, 70)

	declare ui_slider $srSlider (0,13)
		move_control_px($srSlider, 75, 90)
		make_persistent($srSlider)		

	declare ui_label $srLabel (1,1)
		set_control_par (get_ui_id($srLabel),$CONTROL_PAR_WIDTH,$labelWidth)
		set_control_par (get_ui_id($srLabel),$CONTROL_PAR_HEIGHT,$labelHeight)
		move_control_px($srLabel, 175, 90)

	declare ui_label $msLabel (1,1)
		set_control_par (get_ui_id($msLabel),$CONTROL_PAR_WIDTH,$labelWidth)
		set_control_par (get_ui_id($msLabel),$CONTROL_PAR_HEIGHT,$labelHeight)	
		move_control_px($msLabel, 75, 110)
	declare ui_label $hzLabel (1,1)
		set_control_par (get_ui_id($hzLabel),$CONTROL_PAR_WIDTH,$labelWidth)
		set_control_par (get_ui_id($hzLabel),$CONTROL_PAR_HEIGHT,$labelHeight)	
		move_control_px($hzLabel, 225, 110)
	declare ui_label $samplesLabel (1,1)
		set_control_par (get_ui_id($samplesLabel),$CONTROL_PAR_WIDTH,$labelWidth)
		set_control_par (get_ui_id($samplesLabel),$CONTROL_PAR_HEIGHT,$labelHeight)	
		move_control_px($samplesLabel, 375, 110)

	declare %sampleRates[14]
	%sampleRates[0] := 8000
	%sampleRates[1] := 11025
	%sampleRates[2] := 16000
	%sampleRates[3] := 22050
	%sampleRates[4] := 32000
	%sampleRates[5] := 37800
	%sampleRates[6] := 44056
	%sampleRates[7] := 44100
	%sampleRates[8] := 48000
	%sampleRates[9] := 88200
	%sampleRates[10] := 96000
	%sampleRates[11] := 176400
	%sampleRates[12] := 192000
	%sampleRates[13] := 352800

	declare ?divisionValues[22]
	?divisionValues[0] := 0.084
	?divisionValues[1] := 0.125
	?divisionValues[2] := 0.188
	?divisionValues[3] := 0.166
	?divisionValues[4] := 0.25
	?divisionValues[5] := 0.376
	?divisionValues[6] := 0.333
	?divisionValues[7] := 0.5
	?divisionValues[8] := 0.75
	?divisionValues[9] := 0.666
	?divisionValues[10] := 1.0
	?divisionValues[11] := 1.5
	?divisionValues[12] := 1.33
	?divisionValues[13] := 2.0
	?divisionValues[14] := 3.0
	?divisionValues[15] := 4.0
	?divisionValues[16] := 8.0
	?divisionValues[17] := 16.0
	?divisionValues[18] := 32.0
	?divisionValues[19] := 64.0
	?divisionValues[20] := 128.0
	?divisionValues[21] := 256.0

	declare !divisionStrings[22]
	!divisionStrings[0] := "1/32t"
	!divisionStrings[1] := "1/32"
	!divisionStrings[2] := "1/32d"
	!divisionStrings[3] := "1/16t"
	!divisionStrings[4] := "1/16"
	!divisionStrings[5] := "1/16d"
	!divisionStrings[6] := "1/8t"
	!divisionStrings[7] := "1/8"
	!divisionStrings[8] := "1/8d"
	!divisionStrings[9] := "1/4t"
	!divisionStrings[10] := "1/4"
	!divisionStrings[11] := "1/4d"
	!divisionStrings[12] := "1/2t"
	!divisionStrings[13] := "1/2"
	!divisionStrings[14] := "1/2d"
	!divisionStrings[15] := "1bar"
	!divisionStrings[16] := "2bar"
	!divisionStrings[17] := "4bar"
	!divisionStrings[18] := "8bar"
	!divisionStrings[19] := "16bar"
	!divisionStrings[20] := "32bar"
	!divisionStrings[21] := "64bar"

{ }
{-------------------------------------------------------------------------}
{-------------------------------------------------------------------------}
{-------------------------------------------------------------------------}


	declare %tuningValues[12]
	%tuningValues[0] := 440
	%tuningValues[1] := 415
	%tuningValues[2] := 432
	%tuningValues[3] := 434
	%tuningValues[4] := 436
	%tuningValues[5] := 438
	%tuningValues[6] := 441
	%tuningValues[7] := 442
	%tuningValues[8] := 443
	%tuningValues[9] := 444
	%tuningValues[10] := 446
	%tuningValues[11] := 448

	declare !octaveNotes[12]
	!octaveNotes[0] := "C"
	!octaveNotes[1] := "C#"
	!octaveNotes[2] := "D"
	!octaveNotes[3] := "D#"
	!octaveNotes[4] := "E"
	!octaveNotes[5] := "F"
	!octaveNotes[6] := "F#"
	!octaveNotes[7] := "G"
	!octaveNotes[8] := "G#"
	!octaveNotes[9] := "A"
	!octaveNotes[10] := "A#"
	!octaveNotes[11] := "B"

	declare !noteStrings[108]
	declare $octave := 0
	$i := 0
	$x := 0
	while ($i<108)
		!noteStrings[$i] := !octaveNotes[$x] & $octave
		inc($i)
		inc($x)
		if ($x = 12)
			inc($octave)
			$x := 0
		end if
	end while

	declare ui_label $freqCalcLabel (1,1)
		set_control_par (get_ui_id($freqCalcLabel),$CONTROL_PAR_WIDTH,300)
		set_control_par (get_ui_id($freqCalcLabel),$CONTROL_PAR_HEIGHT,$labelHeight)	
		set_control_par (get_ui_id($freqCalcLabel),$CONTROL_PAR_TEXT_ALIGNMENT,1)
		set_text($freqCalcLabel, "Note Frequencies")
		move_control_px($freqCalcLabel, 75, 130)

	declare ui_slider $noteStringSelect (0,107)
		move_control_px($noteStringSelect, 75, 150)
		make_persistent($noteStringSelect)

	declare ui_label $noteStringLabel (1,1)
		set_control_par (get_ui_id($noteStringLabel),$CONTROL_PAR_WIDTH,$labelWidth)
		set_control_par (get_ui_id($noteStringLabel),$CONTROL_PAR_HEIGHT,$labelHeight)	
		move_control_px($noteStringLabel, 175, 150)

	declare ui_slider $tuningSelect (0,11)
		move_control_px($tuningSelect, 75, 170)
		make_persistent($tuningSelect)

	declare ui_label $tuningLabel (1,1)
		set_control_par (get_ui_id($tuningLabel),$CONTROL_PAR_WIDTH,$labelWidth)
		set_control_par (get_ui_id($tuningLabel),$CONTROL_PAR_HEIGHT,$labelHeight)	
		move_control_px($tuningLabel, 175, 170)

	declare ui_label $noteFreqLabel (1,1)
		set_control_par (get_ui_id($noteFreqLabel),$CONTROL_PAR_WIDTH,$labelWidth)
		set_control_par (get_ui_id($noteFreqLabel),$CONTROL_PAR_HEIGHT,$labelHeight)	
		move_control_px($noteFreqLabel, 75, 190)		

{ }
{-------------------------------------------------------------------------}
{-------------------------------------------------------------------------}
{-------------------------------------------------------------------------}

	declare !scaleStrings[31]
	!scaleStrings[0] := "Major"
	!scaleStrings[1] := "Natural Minor"
	!scaleStrings[2] := "Melodic Minor Asc"
	!scaleStrings[3] := "Melodic Minor Desc"
	!scaleStrings[4] := "Harmonic Minor"
	!scaleStrings[5] := "Minor Pentatonic"
	!scaleStrings[6] := "Minor Blues"
	!scaleStrings[7] := "Major Blues"
	!scaleStrings[8] := "Ionian"
	!scaleStrings[9] := "Dorian"
	!scaleStrings[10] := "Lydian"
	!scaleStrings[11] := "Phrygian"
	!scaleStrings[12] := "Phrygian Dominant"
	!scaleStrings[13] := "Mixolydian"
	!scaleStrings[14] := "Aeolian"
	!scaleStrings[15] := "Aeolian Dominant"
	!scaleStrings[16] := "Locrian"
	!scaleStrings[17] := "Super Locrian"
	!scaleStrings[18] := "Byzantine"
	!scaleStrings[19] := "Balinese Pelog"
	!scaleStrings[20] := "Chinese"
	!scaleStrings[21] := "Diminished"
	!scaleStrings[22] := "Dominant Diminished"
	!scaleStrings[23] := "Egyptian"
	!scaleStrings[24] := "Eight Tone Spanish"
	!scaleStrings[25] := "Geez"
	!scaleStrings[26] := "Japanese"
	!scaleStrings[27] := "Hirajoshi"
	!scaleStrings[28] := "Oriental"
	!scaleStrings[29] := "Romanian"
	!scaleStrings[30] := "Yo"

	declare ui_label $scaleCalcLabel (1,1)
		set_control_par (get_ui_id($scaleCalcLabel),$CONTROL_PAR_WIDTH,300)
		set_control_par (get_ui_id($scaleCalcLabel),$CONTROL_PAR_HEIGHT,$labelHeight)	
		set_control_par (get_ui_id($scaleCalcLabel),$CONTROL_PAR_TEXT_ALIGNMENT,1)
		set_text($scaleCalcLabel, "Musical Scales")
		move_control_px($scaleCalcLabel, 75, 210)

	declare ui_slider $scaleRootSelect (0,11)
		move_control_px($scaleRootSelect, 75, 230)
		make_persistent($scaleRootSelect)

	declare ui_label $scaleRootLabel (1,1)
		set_control_par (get_ui_id($scaleRootLabel),$CONTROL_PAR_WIDTH,$labelWidth)
		set_control_par (get_ui_id($scaleRootLabel),$CONTROL_PAR_HEIGHT,$labelHeight)	
		move_control_px($scaleRootLabel, 175, 230)		

	declare ui_slider $scaleTypeSelect (0,30)
		move_control_px($scaleTypeSelect, 75, 250)
		make_persistent($scaleTypeSelect)

	declare ui_label $scaleTypeLabel (1,1)
		set_control_par (get_ui_id($scaleTypeLabel),$CONTROL_PAR_WIDTH,$labelWidth)
		set_control_par (get_ui_id($scaleTypeLabel),$CONTROL_PAR_HEIGHT,$labelHeight)	
		move_control_px($scaleTypeLabel, 175, 250)		

	declare ui_label $scaleResultLabel (1,1)
		set_control_par (get_ui_id($scaleResultLabel),$CONTROL_PAR_WIDTH,$labelWidth*2)
		set_control_par (get_ui_id($scaleResultLabel),$CONTROL_PAR_HEIGHT,$labelHeight)	
		move_control_px($scaleResultLabel, 75, 270)	

	declare @scaleResultString

end on

function calcResult
	set_text($msLabel,"Milliseconds: " & real_to_int(round(60000.0 / int_to_real($bpmSlider) * ?divisionValues[$divisionSlider])))
	set_text($hzLabel,"Hertz: " & (int_to_real($bpmSlider) / 60.0) / ?divisionValues[$divisionSlider] )
	set_text($samplesLabel,"Samples: " & real_to_int(round(60.0 / int_to_real($bpmSlider) * ?divisionValues[$divisionSlider] * int_to_real(%sampleRates[$srSlider]))))
end function

function freqResult
	set_text($noteFreqLabel,"Hertz: " & int_to_real(%tuningValues[$tuningSelect]) * pow(1.059463094359,int_to_real($noteStringSelect) - 57.0))
end function

function scaleResult
	select ($scaleRootSelect)
      case 0
          select ($scaleTypeSelect)
              case 0
              @scaleResultString := "C, D, E, F, G, A, B, C"            
              case 1
              @scaleResultString := "C, D, Eb, F, G, Ab, Bb, C"           
              case 2
              @scaleResultString := "C, D, Eb, F, G, A, B, C"      
              case 3
              @scaleResultString := "C, D, Eb, F, G, Ab, Bb, C"
              case 4
              @scaleResultString := "C, D, Eb, F, G, Ab, B, C"
              case 5
              @scaleResultString := "C, D, E, G, A, C"
              case 6
              @scaleResultString := "C, Eb, F, G, Bb, C"
              case 7
              @scaleResultString := "C, Eb, F, F#, G, Bb, C"
              case 8
              @scaleResultString := "C, D, Eb, E, G, A, C"
              case 9
              @scaleResultString := "C, D, E, F, G, A, B, C"
              case 10
              @scaleResultString := "C, D, Eb, F, G, A, Bb, C"
              case 11
              @scaleResultString := "C, D, E, F#, G, A, B, C"
              case 12
              @scaleResultString := "C, Db, Eb, F, G, Ab, Bb, C"
              case 13 
              @scaleResultString := "C, C#, E, F, G, G#, A#, C"
              case 14 
              @scaleResultString := "C, D, E, F, G, A, Bb, C"
              case 15 
              @scaleResultString := "C, D, Eb, F, G, Ab, Bb, C"
              case 16 
              @scaleResultString := "C, D, E, F, G, Ab, Bb, C"
              case 17 
              @scaleResultString := "C, C#, D#, F, F#, G#, A#, C"
              case 18 
              @scaleResultString := "C, Db, D#, E, Gb, Ab, Bb, C"
              case 19 
              @scaleResultString := "C, D, Eb, F, F#, G, Ab, B, C"
              case 20 
              @scaleResultString := "C, Db, Eb, G, Ab, C"
              case 21 
              @scaleResultString := "C, E, F#, G, B, C"
              case 22 
              @scaleResultString := "C, D, Eb, F, Gb, Ab, A, B, C"
              case 23 
              @scaleResultString := "C, Db, D#, E, F#, G, A, Bb, C"
              case 24 
              @scaleResultString := "C, D, F, G, Bb, C"
              case 25 
              @scaleResultString := "C, C#, D#, E, F, F#, G#, A#, C"
              case 26 
              @scaleResultString := "C, D, Eb, F, G, Ab, Bb, C"
              case 27 
              @scaleResultString := "C, C#, F, G, A#, C"
              case 28 
              @scaleResultString := "C, Db, F, Gb, Bb, C"
              case 29 
              @scaleResultString := "C, Db, E, F, Gb, A, Bb, C"
              case 30 
              @scaleResultString := "C, D, Eb, F#, G, A, A#, C"
              case 31 
              @scaleResultString := "C, D, F, G, A, C"  
          end select
         case 1 
          select ($scaleTypeSelect)
              case 0 
              @scaleResultString := "Db, Eb, F, Gb, Ab, Bb, C, Db"
              case 1 
              @scaleResultString := "C#, D#, E, F#, G#, A, B, C#"
              case 2 
              @scaleResultString := "C#, Eb, E, F#, G#, A#, C, C#"
              case 3 
              @scaleResultString := "C#, Eb, E, F#, G#, A, B, C#"
              case 4 
              @scaleResultString := "C#, D#, E, F#, G#, A, C, C#"
              case 5 
              @scaleResultString := "C#, D#, F, G#, A#, C#"
              case 6 
              @scaleResultString := "C#, E, F#, G#, B, C#"
              case 7 
              @scaleResultString := "C#, E, F#, G, G#, B, C#"
              case 8 
              @scaleResultString := "C#, D#, E, F, G#, A#, C#"
              case 9 
              @scaleResultString := "Db, Eb, F, Gb, Ab, Bb, C, Db"
              case 10 
              @scaleResultString := "C#, D#, E, F#, G#, A#, B, C#"
              case 11 
              @scaleResultString := "C#, D#, F, G, Ab, Bb, C, C#"
              case 12 
              @scaleResultString := "C#, D, E, F#, G#, A, B, C#"
              case 13 
              @scaleResultString := "C#, D, F, F#, G#, A, B, C#"
              case 14 
              @scaleResultString := "C#, D#, E#, F#, G#, A#, B, C#"
              case 15 
              @scaleResultString := "C#, D#, E, F#, G#, A, B, C#"
              case 16 
              @scaleResultString := "C#, D#, F, F#, G#, A, B, C#"
              case 17 
              @scaleResultString := "C#, D, E, F#, G, A, B, C#"
              case 18 
              @scaleResultString := "C#, D, E, F, G, A, B, C#"
              case 19
              @scaleResultString := "C#, D#, E, F#, G, G#, A, C, C#"
              case 20 
              @scaleResultString := "C#, D, E, G#, A, C#"
              case 21
              @scaleResultString := "Db, F, G, Ab, C, Db"
              case 22
              @scaleResultString := "C#, D#, E, F#, G, A, Bb, C, C#"
              case 23
              @scaleResultString := "C#, D, E, F, G, G#, Bb, B, C#"
              case 24
              @scaleResultString := "C#, D#, F#, G#, B, C#"
              case 25
              @scaleResultString := "C#, D, E, F, F#, G, A, B, C#"
              case 26
              @scaleResultString := "C#, D#, E, F#, G#, A, B, C#"
              case 27
              @scaleResultString := "C#, D, F#, G#, B, C#"
              case 28 
              @scaleResultString := "C#, D, F#, G, B, C#"
              case 29 
              @scaleResultString := "C#, D, F, F#, G, A#, B, C#"
              case 30 
              @scaleResultString := "C#, Eb, E, G, G#, A#, B, C#"
              case 31 
              @scaleResultString := "C#, D#, F#, G#, A#, C#"         
          end select       
         case 2
          select ($scaleTypeSelect)
              case 0
              @scaleResultString := "D, E, F#, G, A, B, C#, D"
              case 1
              @scaleResultString := "D, E, F, G, A, Bb, C, D"
              case 2
              @scaleResultString := "D, E, F, G, A, B, C#, D"
              case 3
              @scaleResultString := "D, E, F, G, A, Bb, C, D"
              case 4
              @scaleResultString := "D, E, F, G, A, Bb, C#, D"
              case 5
              @scaleResultString := "D, E, F#, A, B, D"
              case 6
              @scaleResultString := "D, F, G, A, C, D"
              case 7
              @scaleResultString := "D, F, G, G#, A, C, D"
              case 8
              @scaleResultString := "D, E, F, F#, A, B, D"
              case 9
              @scaleResultString := "D, E, F#, G, A, B, C#, D"
              case 10
              @scaleResultString := "D, E, F, G, A, B, C, D"
              case 11
              @scaleResultString := "D, E, F#, G#, A, B, C#, D"
              case 12
              @scaleResultString := "D, Eb, F, G, A, Bb, C, D"
              case 13
              @scaleResultString := "D, Eb, F#, G, A, A#, C, D"
              case 14
              @scaleResultString := "D, E, F#, G, A, B, C, D"
              case 15
              @scaleResultString := "D, E, F, G, A, Bb, C, D"
              case 16
              @scaleResultString := "D, E, F#, G, A, Bb, C, D"
              case 17
              @scaleResultString := "D, Eb, F, G, G#, A#, C, D"
              case 18
              @scaleResultString := "D, Eb, F, Gb, Ab, A#, C, D"
              case 19
              @scaleResultString := "D, E, F, G, A, Bb, C#, D"
              case 20
              @scaleResultString := "D, Eb, F, A, Bb, D"
              case 21 
              @scaleResultString := "D, F#, G#, A, C#, D"
              case 22 
              @scaleResultString := "D, E, F, G, Ab, Bb, B, C#, D"   
              case 23 
              @scaleResultString := "D, Eb, F, F#, G#, A, B, C, D"        
              case 24
              @scaleResultString := "D, E, G, A, C, D"
              case 25
              @scaleResultString := "D, D#, F, F#, G, G#, A#, C, D"
              case 26 
              @scaleResultString := "D, E, F, G, A, Bb, C, D"
              case 27
              @scaleResultString := "D, D#, G, A, C, D"
              case 28
              @scaleResultString := "D, Eb, G, Ab, C, D"
              case 29
              @scaleResultString := "D, Eb, Gb, G, Ab, B, C, D"
              case 30
              @scaleResultString := "D, E, F, G#, A, B, C, D"      
              case 31
              @scaleResultString := "D, E, G, A, B, D"           
          end select     
         case 3
          select ($scaleTypeSelect)
              case 0
              @scaleResultString := "Eb, F, G, Ab, Bb, C, D, Eb"      
              case 1
              @scaleResultString := "D#, F, F#, G#, A#, B, C#, D#"           
              case 2
              @scaleResultString := "D#, F, F#, G#, A#, C, D, D#"           
              case 3
              @scaleResultString := "D#, F, F#, G#, A#, B, C#, D#"
              case 4
              @scaleResultString := "D#, F, F#, G#, A#, B, D, D#"
              case 5
              @scaleResultString := "D#, F, G, A#, C, D#"
              case 6
              @scaleResultString := "D#, F#, G#, A#, C#, D#"
              case 7
              @scaleResultString := "D#, F#, G#, A, A#, C#, D#"              
              case 8
              @scaleResultString := "D#, F, F#, G, A#, C, D#"              
              case 9
              @scaleResultString := "Eb, F, G, Ab, Bb, C, D, Eb"              
              case 10
              @scaleResultString := "D#, F, F#, G#, A#, C, C#, D#"              
              case 11
              @scaleResultString := "D#, F, G, A, Bb, C, D, D#"              
              case 12
              @scaleResultString := "D#, E, F#, G#, A#, B, C#, D#"              
              case 13
              @scaleResultString := "Eb, E, G, G#, A#, B, C#, Eb"              
              case 14
              @scaleResultString := "D#, E#, F##, G#, A#, B#, C#, D#"              
              case 15
              @scaleResultString := "Eb, F, Gb, Ab, Bb, Cb, Db, Eb"              
              case 16
              @scaleResultString := "Eb, F, G, Ab, Bb, Cb, Db, Eb"              
              case 17
              @scaleResultString := "Eb, E, F#, G#, A, B, C#, Eb"              
              case 18
              @scaleResultString := "Eb, E, F#, G, A, B, C#, D#"              
              case 19
              @scaleResultString := "D#, F, F#, G#, A, A#, B, D, D#" 
              case 20
              @scaleResultString := "D#, E, F#, A#, B, D#"              
              case 21
              @scaleResultString := "Eb, G, A, Bb, D, Eb"              
              case 22
              @scaleResultString := "D#, F, F#, G#, A, B, C, D, D#"              
              case 23
              @scaleResultString := "D#, E, F#, G, A, Bb, C, Db, D#"              
              case 24
              @scaleResultString := "D#, F, G#, A#, C#, D#"              
              case 25
              @scaleResultString := "D#, E, F#, G, G#, A, B, C#, D#"              
              case 26
              @scaleResultString := "Eb, F, Gb, Ab, Bb, Cb, Db, Eb"              
              case 27
              @scaleResultString := "D#, E, G#, A#, C#, D#"              
              case 28
              @scaleResultString := "D#, E, G#, A, C#, D#"              
              case 29
              @scaleResultString := "D#, E, G, G#, A, C, C#, D#"              
              case 30
              @scaleResultString := "Eb, F, F#, A, A#, C, C#, Eb"              
              case 31
              @scaleResultString := "D#, F, G#, A#, C, D#"              
          end select         
         case 4
          select ($scaleTypeSelect)
              case 0
              @scaleResultString := "E, F#, G#, A, B, C#, D#, E"
              case 1
              @scaleResultString := "E, F#, G, A, B, C, D, E"
              case 2
              @scaleResultString := "E, F#, G, A, B, C#, D#, E" 
              case 3
              @scaleResultString := "E, F#, G, A, B, C, D, E"
              case 4
              @scaleResultString := "E, F#, G, A, B, C, D#, E"
              case 5
              @scaleResultString := "E, F#, G#, B, C#, E"
              case 6
              @scaleResultString := "E, G, A, B, D, E"
              case 7
              @scaleResultString := "E, G, A, A#, B, D, E"
              case 8
              @scaleResultString := "E, F#, G, G#, B, C#, E"
              case 9
              @scaleResultString := "E, F#, G#, A, B, C#, D#, E"
              case 10
              @scaleResultString := "E, F#, G, A, B, C#, D, E"
              case 11
              @scaleResultString := "E, F#, G#, A#, B, C#, D#, E"
              case 12
              @scaleResultString := "E, F, G, A, B, C, D, E"
              case 13
              @scaleResultString := "E, F, G#, A, B, C, D, E"
              case 14
              @scaleResultString := "E, F#, G#, A, B, C#, D, E"
              case 15
              @scaleResultString := "E, F#, G, A, B, C, D, E"
              case 16
              @scaleResultString := "E, F#, G#, A, B, C, D, E"
              case 17
              @scaleResultString := "E, F, G, A, Bb, C, D, E"
              case 18
              @scaleResultString := "E, F, G, G#, A#, C, D, E"
              case 19
              @scaleResultString := "E, F#, G, A, A#, B, C, D#, E"
              case 20
              @scaleResultString := "E, F, G, A, C, E"
              case 21
              @scaleResultString := "E, G#, A#, B, D#, E"
              case 22
              @scaleResultString := "E, F#, G, A, Bb, C, C#, D#, E"
              case 23
              @scaleResultString := "E, F, G, G#, A#, B, C#, D#, E"
              case 24
              @scaleResultString := "E, F#, A, B, D, E"
              case 25
              @scaleResultString := "E, F, G, G#, A, A#, C, D, E"
              case 26
              @scaleResultString := "E, F#, G, A, B, C, D, E"
              case 27
              @scaleResultString := "E, F, A, B, D, E"
              case 28
              @scaleResultString := "E, F, A, Bb, D, E"
              case 29
              @scaleResultString := "E, F, Ab, A, Bb, Db, D, E"
              case 30
              @scaleResultString := "E, F#, G, A#, B, C#, D, E"
              case 31
              @scaleResultString := "E, F#, A, B, C#, E"       
          end select    
         case 5
          select ($scaleTypeSelect)
              case 0
              @scaleResultString := "F, G, A, Bb, C, D, E, F"
              case 1
              @scaleResultString := "F, G, Ab, Bb, C, Db, Eb, F"       
              case 2
              @scaleResultString := "F, G, Ab, Bb, C, D, E, F"
              case 3
              @scaleResultString := "F, G, Ab, Bb, C, Db, Eb, F"
              case 4
              @scaleResultString := "F, G, Ab, Bb, C, Db, E, F"
              case 5
              @scaleResultString := "F, G, A, C, D, F"
              case 6
              @scaleResultString := "F, Ab, Bb, C, Eb, F"
              case 7
              @scaleResultString := "F, Ab, Bb, B, C, Eb, F"
              case 8
              @scaleResultString := "F, G, Ab, A, C, D, F"
              case 9
              @scaleResultString := "F, G, A, Bb, C, D, E, F"
              case 10
              @scaleResultString := "F, G, G#, A#, C, D, D#, F"
              case 11
              @scaleResultString := "F, G, A, B, C, D, E, F"
              case 12
              @scaleResultString := "F, F#, G#, A#, C, C#, D#, F"
              case 13
              @scaleResultString := "F, F#, A, A#, C, C#, Eb, F"
              case 14
              @scaleResultString := "F, G, A, Bb, C, D, Eb, F"
              case 15
              @scaleResultString := "F, G, Ab, Bb, C, Db, Eb, F"
              case 16
              @scaleResultString := "F, G, A, Bb, C, Db, Eb, F"   
              case 17
              @scaleResultString := "F, F#, G#, A#, B, C#, D#, F"
              case 18
              @scaleResultString := "F, Gb, G#, A, B, C#, D#, F"
              case 19
              @scaleResultString := "F, G, Ab, Bb, B, C, Db, E, F"
              case 20
              @scaleResultString := "F, Gb, Ab, C, Db, F"
              case 21
              @scaleResultString := "F, A, B, C, E, F"
              case 22
              @scaleResultString := "F, G, Ab, Bb, B, C#, D, E, F"
              case 23
              @scaleResultString := "F, Gb, G#, A, B, C, D, Eb, F"
              case 24
              @scaleResultString := "F, G, A#, C, Eb, F"
              case 25
              @scaleResultString := "F, F#, G#, A, A#, B, C#, D#, F"
              case 26
              @scaleResultString := "F, G, Ab, Bb, C, Db, Eb, F"
              case 27
              @scaleResultString := "F, F#, A#, C, D#, F"
              case 28
              @scaleResultString := "F, Gb, Bb, B, Eb, F" 
              case 29
              @scaleResultString := "F, Gb, A, Bb, B, D, Eb, F"    
              case 30
              @scaleResultString := "F, G, G#, B, C, D, Eb, F"
              case 31
              @scaleResultString := "F, G, A#, C, D, F"      
          end select   
         case 6
          select ($scaleTypeSelect)
              case 0
              @scaleResultString := "F#, G#, A#, B, C#, D#, F, F#"
              case 1
              @scaleResultString := "F#, G#, A, B, C#, D, E, F#"
              case 2
              @scaleResultString := "F#, G#, A, B, C#, Eb, F, F#"
              case 3
              @scaleResultString := "F#, G#, A, B, C#, D, E, F#"  
              case 4
              @scaleResultString := "F#, G#, A, B, C#, D, F, F#"
              case 5
              @scaleResultString := "F#, G#, A#, C#, D#, F#"
              case 6
              @scaleResultString := "F#, A, B, C#, E, F#"  
              case 7
              @scaleResultString := "F#, A, B, C, C#, E, F#"
              case 8
              @scaleResultString := "F#, G#, A, A#, C#, D#, F#"     
              case 9
              @scaleResultString := "F#, G#, A#, B, C#, D#, F, F#"
              case 10
              @scaleResultString := "F#, G#, A, B, C#, D#, E, F#"
              case 11
              @scaleResultString := "F#, G#, A#, C, C#, D#, F, F#"
              case 12
              @scaleResultString := "F#, G, A, B, C#, D, E, F#"
              case 13
              @scaleResultString := "F#, G, A#, B, C#, D, E, F#"
              case 14
              @scaleResultString := "F#, G#, A#, B, C#, D#, E, F#"  
              case 15
              @scaleResultString := "F#, G#, A, B, C#, D, E, F#"
              case 16
              @scaleResultString := "F#, G#, A#, B, C#, D, E, F#"
              case 17
              @scaleResultString := "F#, G, A, B, C, D, E, F#"
              case 18
              @scaleResultString := "F#, G, A, A#, C, D, E, F#"
              case 19
              @scaleResultString := "F#, G#, A, B, C, D#, D, F, F#"
              case 20
              @scaleResultString := "F#, G, A, C#, D, F#"
              case 21
              @scaleResultString := "F#, A#, B#, C#, E#, F#"
              case 22
              @scaleResultString := "F#, G#, A, B, C, D, D#, F, F#"
              case 23
              @scaleResultString := "F#, G, A, Bb, C, C#, D#, E, F#"
              case 24
              @scaleResultString := "F#, G#, B, C#, E, F#"
              case 25
              @scaleResultString := "F#, G, A, A#, B, C, D, E, F#"
              case 26
              @scaleResultString := "F#, G#, A, B, C#, D, E, F#"
              case 27
              @scaleResultString := "F#, G, B, C#, E, F#"
              case 28
              @scaleResultString := "F#, G, B, C, E, F#"     
              case 29
              @scaleResultString := "F#, G, A#, B, C, D#, E, F#"
              case 30
              @scaleResultString := "F#, G#, A, C, C#, Eb, E, F#"
              case 31
              @scaleResultString := "F#, G#, B, C#, D#, F#"        
          end select   
         case 7
          select ($scaleTypeSelect)
              case 0
              @scaleResultString := "G, A, B, C, D, E, F#, G"
              case 1
              @scaleResultString := "G, A, Bb, C, D, Eb, F, G"
              case 2
              @scaleResultString := "G, A, Bb, C, D, E, F#, G"
              case 3
              @scaleResultString := "G, A, Bb, C, D, Eb, F, G"
              case 4
              @scaleResultString := "G, A, Bb, C, D, Eb, F#, G"
              case 5
              @scaleResultString := "G, A, B, D, E, G"
              case 6
              @scaleResultString := "G, Bb, C, D, F, G"
              case 7
              @scaleResultString := "G, Bb, C, C#, D, F, G"
              case 8
              @scaleResultString := "G, A, Bb, B, D, E, G"
              case 9
              @scaleResultString := "G, A, B, C, D, E, F#, G"
              case 10
              @scaleResultString := "G, A, Bb, C, D, E, F, G"
              case 11
              @scaleResultString := "G, A, B, C#, D, E, F#, G"
              case 12
              @scaleResultString := "G, G#, A#, C, D, D#, F, G"
              case 13
              @scaleResultString := "G, G#, B, C, D, Eb, F, G"
              case 14
              @scaleResultString := "G, A, B, C, D, E, F, G"        
              case 15
              @scaleResultString := "G, A, Bb, C, D, Eb, F, G"
              case 16
              @scaleResultString := "G, A, B, C, D, Eb, F, G"
              case 17
              @scaleResultString := "G, G#, A#, C, C#, D#, F, G" 
              case 18
              @scaleResultString := "G, Ab, A#, B, Db, D#, F, G"   
              case 19
              @scaleResultString := "G, A, Bb, C, C#, D, D#, F#, G"
              case 20
              @scaleResultString := "G, Ab, Bb, D, Eb, G"   
              case 21
              @scaleResultString := "G, B, C#, D, F#, G"
              case 22
              @scaleResultString := "G, A, Bb, C, C#, D#, E, F#, G"
              case 23
              @scaleResultString := "G, Ab, A#, B, C#, D, E, F, G"     
              case 24
              @scaleResultString := "G, A, C, D, F, G"
              case 25
              @scaleResultString := "G, G#, A#, B, C, C#, D#, F, G"
              case 26
              @scaleResultString := "G, A, Bb, C, D, Eb, F, G"
              case 27
              @scaleResultString := "G, G#, C, D, F, G"
              case 28
              @scaleResultString := "G, Ab, C, Db, F, G"
              case 29
              @scaleResultString := "G, Ab, B, C, Db, E, F, G"
              case 30
              @scaleResultString := "G, A, A#, C#, D, E, F, G"
              case 31
              @scaleResultString := "G, A, C, D, E, G"   
          end select
         case 8
          select ($scaleTypeSelect)
              case 0
              @scaleResultString := "Ab, Bb, C, Db, Eb, F, G, Ab"              
              case 1
              @scaleResultString := "G#, A#, B, C#, D#, E, F#, G#"      
              case 2
              @scaleResultString := "G#, A#, B, C#, Eb, F, G, G#"
              case 3
              @scaleResultString := "G#, A#, B, C#, Eb, E, F#, G#"
              case 4
              @scaleResultString := "G#, A#, B, C#, D#, E, G, G#"
              case 5
              @scaleResultString := "G#, A#, C, D#, F, G#"
              case 6
              @scaleResultString := "G#, B, C#, D#, F#, G#"
              case 7
              @scaleResultString := "G#, B, C#, D, D#, F#, G#"
              case 8
              @scaleResultString := "G#, A#, B, C, D#, F, G#"
              case 9
              @scaleResultString := "Ab, Bb, C, Db, Eb, F, G, Ab"
              case 10
              @scaleResultString := "G#, A#, B, C#, D#, F, F#, G#"
              case 11
              @scaleResultString := "G#, A#, C, D, Eb, F, G, G#"
              case 12
              @scaleResultString := "G#, A, B, C#, D#, E, F#, G#"
              case 13
              @scaleResultString := "G#, A, C, C#, Eb, E, F#, G#"
              case 14
              @scaleResultString := "G#, A#, B#, C#, D#, E#, F#, G#"
              case 15
              @scaleResultString := "G#, A#, B, C#, D#, E, F#, G#"
              case 16
              @scaleResultString := "G#, A#, B#, C#, D#, E, F#, G#"        
              case 17
              @scaleResultString := "G#, A, B, C#, D, E, F#, G#"       
              case 18
              @scaleResultString := "G#, A, B, C, D, E, F#, G#"
              case 19
              @scaleResultString := "G#, A#, B, C#, D, D#, E, G, G#"
              case 20
              @scaleResultString := "G#, A, B, D#, E, G#"
              case 21
              @scaleResultString := "Ab, C, D, Eb, G, Ab"     
              case 22
              @scaleResultString := "G#, A#, B, Db, D, E, F, G, G#"
              case 23
              @scaleResultString := "G#, A, B, C, D, Eb, F, Gb, G#"
              case 24
              @scaleResultString := "G#, A#, C#, D#, F#, G#"
              case 25
              @scaleResultString := "G#, A, B, C, C#, D, E, F#, G#"
              case 26
              @scaleResultString := "G#, A#, B, C#, D#, E, F#, G#"
              case 27
              @scaleResultString := "G#, A, C#, D#, F#, G#"
              case 28
              @scaleResultString := "G#, A, C#, D, F#, G#"
              case 29
              @scaleResultString := "G#, A, C, C#, D, G, F#, G#"
              case 30
              @scaleResultString := "A#, B, D, Eb, F, F#, G#"
              case 31
              @scaleResultString := "G#, A#, C#, D#, F, G#"      
          end select  
         case 9 
          select ($scaleTypeSelect)
              case 0
              @scaleResultString := "A, B, C#, D, E, F#, G#, A"
              case 1
              @scaleResultString := "A, B, C, D, E, F, G, A"
              case 2
              @scaleResultString := "A, B, C, D, E, F#, G#, A"
              case 3
              @scaleResultString := "A, B, C, D, E, F, G, A"
              case 4
              @scaleResultString := "A, B, C, D, E, F, G#, A"
              case 5 
              @scaleResultString := "A, B, C#, E, F#, A"
              case 6
              @scaleResultString := "A, C, D, E, G, A"
              case 7
              @scaleResultString := "A, C, D, D#, E, G, A"
              case 8
              @scaleResultString := "A, B, C, C#, E, F#, A"
              case 9
              @scaleResultString := "A, B, C#, D, E, F#, G#, A"
              case 10
              @scaleResultString := "A, B, C, D, E, F#, G, A"
              case 11
              @scaleResultString := "A, B, C#, D#, E, F#, G#, A"
              case 12
              @scaleResultString := "A, Bb, C, D, E, F, G, A"
              case 13
              @scaleResultString := "A, A#, C#, D, E, F, G, A"
              case 14
              @scaleResultString := "A, B, C#, D, E, F#, G, A"
              case 15
              @scaleResultString := "A, B, C, D, E, F, G, A"
              case 16
              @scaleResultString := "A, B, C#, D, E, F, G, A"
              case 17
              @scaleResultString := "A, Bb, C, D, Eb, F, G, A"
              case 18
              @scaleResultString := "A, Bb, C, C#, D#, F, G, A"
              case 19 
              @scaleResultString := "A, B, C, D, D#, E, F, G#, A"
              case 20
              @scaleResultString := "A, Bb, C, E, F, A"
              case 21
              @scaleResultString := "A, C#, D#, E, G#, A"
              case 22
              @scaleResultString := "A, B, C, D, Eb, F, Gb, Ab, A"
              case 23
              @scaleResultString := "A, Bb, C, C#, Eb, E, F#, G, A"
              case 24
              @scaleResultString := "A, B, D, E, G, A"
              case 25
              @scaleResultString := "A, A#, C, C#, D, D#, F, G, A"
              case 26
              @scaleResultString := "A, B, C, D, E, F, G, A"
              case 27 
              @scaleResultString := "A, A#, D, E, G, A"
              case 28
              @scaleResultString := "A, B, D, Eb, G, A"
              case 29
              @scaleResultString := "A, Bb, Db, D, Eb, Gb, G, A"
              case 30
              @scaleResultString := "A, B, C, Eb, E, F#, G, A"  
              case 31
              @scaleResultString := "A, B, D, E, F#, A"  
          end select
         case 10
          select ($scaleTypeSelect)
              case 0
              @scaleResultString := "Bb, C, D, Eb, F, G, A, Bb"
              case 1
              @scaleResultString := "A#, C, C#, D#, F, F#, G#, A#"
              case 2
              @scaleResultString := "A#, C, C#, Eb, F, G, A, A#"
              case 3
              @scaleResultString := "A#, C, C#, Eb, F, F#, G#, A#"
              case 4
              @scaleResultString := "A#, C, C#, D#, F, F#, A, A#"
              case 5
              @scaleResultString := "A#, C, D, F, G, A#"
              case 6
              @scaleResultString := "A#, C#, D#, F, G#, A#"
              case 7
              @scaleResultString := "A#, C#, D#, E, F, G#, A#"
              case 8
              @scaleResultString := "A#, C, C#, D, F, G, A#"
              case 9
              @scaleResultString := "Bb, C, D, Eb, F, G, A, Bb"
              case 10
              @scaleResultString := "A#, C, C#, D#, F, G, G#, A#"
              case 11
              @scaleResultString := "Bb, C, D, E, F, G, A, Bb"
              case 12
              @scaleResultString := "A#, B, C#, D#, F, F#, G#, A#"
              case 13
              @scaleResultString := "A#, B, D, Eb, F, F#, G#, A#"
              case 14
              @scaleResultString := "A#, B#, C##, D#, E#, F##, G#, A#"
              case 15
              @scaleResultString := "Bb, C, Db, Eb, F, Gb, Ab, Bb"
              case 16
              @scaleResultString := "Bb, C, D, Eb, F, Gb, Ab, Bb"
              case 17
              @scaleResultString := "A#, B, C#, D#, E, F#, G#, A#"
              case 18
              @scaleResultString := "A#, B, C#, D, E, F#, G#, A#"
              case 19
              @scaleResultString := "A#, C, C#, D#, E, F, F#, A, A#"
              case 20
              @scaleResultString := "A#, B, C#, E#, F#, A#"
              case 21
              @scaleResultString := "Bb, D, E, F, A, Bb"
              case 22
              @scaleResultString := "A#, C, Db, Eb, E, Gb, G, A, A#"
              case 23
              @scaleResultString := "A#, B, C#, D, E, F, G, Bb, A#"
              case 24
              @scaleResultString := "A#, C, D#, F, G#, A#"
              case 25
              @scaleResultString := "A#, B, C#, D, D#, E, F#, G#, A#"
              case 26
              @scaleResultString := "Bb, C, Db, Eb, F, Gb, Ab, Bb"
              case 27
              @scaleResultString := "A#, B, D#, F, G#, A#"
              case 28
              @scaleResultString := "A#, B, D#, E, G#, A#"
              case 29
              @scaleResultString := "A#, B, D, D#, E, G, G#, A#"
              case 30
              @scaleResultString := "A#, C, C#, E, F, G, G#, A#" 
              case 31
              @scaleResultString := "A#, C, D#, F, G, A#" 
          end select
         case 11
          select ($scaleTypeSelect)
              case 0
              @scaleResultString := "B, C#, D#, E, F#, G#, A#, B"
              case 1
              @scaleResultString := "B, C#, D, E, F#, G, A, B"
              case 2
              @scaleResultString := "B, C#, D, E, F#, G#, A#, B"
              case 3
              @scaleResultString := "B, C#, D, E, F#, G, A, B"
              case 4
              @scaleResultString := "B, C#, D, E, F#, G, A#, B" 
              case 5
              @scaleResultString := "B, C#, D#, F#, G#,B"
              case 6
              @scaleResultString := "B, D, E, F#, A, B"
              case 7
              @scaleResultString := "B, D, E, F, F#, A, B"
              case 8
              @scaleResultString := "B, C#, D, D#, F#, G#, B"
              case 9
              @scaleResultString := "B, C#, D#, E, F#, G#, A#, B"
              case 10
              @scaleResultString := "B, C#, D, E, F#, G#, A, B"
              case 11
              @scaleResultString := "B, C#, D#, F, F#, G#, A#, B"
              case 12
              @scaleResultString := "B, C, D, E, F#, G, A, B"
              case 13
              @scaleResultString := "B, C, Eb, E, F#, G, A, B"
              case 14
              @scaleResultString := "B, C#, D#, E, F#, G#, A, B"
              case 15
              @scaleResultString := "B, C#, D, E, F#, G, A, B"
              case 16
              @scaleResultString := "B, C#, D#, E, F#, G, A, B"
              case 17
              @scaleResultString := "B, C, D, E, F, G, A, B"
              case 18
              @scaleResultString := "B, C, D, Eb, F, G, A, B"
              case 19
              @scaleResultString := "B, C#, D, E, F, F#, G, A#, B"
              case 20
              @scaleResultString := "B, C, D, F#, G, B"
              case 21
              @scaleResultString := "B, D#, E#, F#, A#, B"
              case 22
              @scaleResultString := "B, C#, D, E, F, G, Ab, Bb, B" 
              case 23
              @scaleResultString := "B, C, D, D#, F, Gb, Ab, A, B"    
              case 24
              @scaleResultString := "B, C#, E, F#, A, B"     
              case 25
              @scaleResultString := "B, C, D, D#, E, F, G, A, B"
              case 26
              @scaleResultString := "B, C#, D, E, F#, G, A, B"
              case 27
              @scaleResultString := "B, C, E, F#, A, B"
              case 28
              @scaleResultString := "B, C, E, F, A, B"
              case 29
              @scaleResultString := "B, C, Eb, E, F, Ab, A, B"
              case 30
              @scaleResultString := "B, C#, D, F, F#, G#, A"
              case 31
              @scaleResultString := "B, C#, E, F#, G#, B" 
          end select  
    end select
    set_text($scaleResultLabel, "Scale Notes: " & @scaleResultString)
end function

on persistence_changed
	set_text($srLabel,"Sample Rate: " & %sampleRates[$srSlider])
	set_text($divisionLabel, "Tempo Division: " & !divisionStrings[$divisionSlider])
	set_text($bpmLabel,"BPM: " & $bpmSlider)

	set_text($noteStringLabel,"Note: " & !noteStrings[$noteStringSelect])
	set_text($tuningLabel, "Tuning: " & %tuningValues[$tuningSelect])

	set_text($scaleRootLabel, "Root: " & !octaveNotes[$scaleRootSelect])
	set_text($scaleTypeLabel, "Scale: " & !scaleStrings[$scaleTypeSelect])

	set_text($mirPitch, "Pitch: ")
	set_text($mirPeak, "Peak: ")
	set_text($mirRMS, "RMS: ")
	set_text($mirLoudness, "Loudness: ")
	set_text($mirType, "Drum Type: ")   

	call calcResult
	call freqResult
	call scaleResult
end on 
	
on ui_control($srSlider)
	set_text($srLabel,"Sample Rate: " & %sampleRates[$srSlider])
	call calcResult
end on

on ui_control($divisionSlider)
	set_text($divisionLabel, "Tempo Division: " & !divisionStrings[$divisionSlider])
	call calcResult
end on

on ui_control($bpmSlider)
	set_text($bpmLabel,"BPM: " & $bpmSlider)
	call calcResult
end on

on ui_control($noteStringSelect)
	set_text($noteStringLabel,"Note: " & !noteStrings[$noteStringSelect])
	call freqResult
end on

on ui_control($tuningSelect)
	set_text($tuningLabel, "Tuning: " & %tuningValues[$tuningSelect])
	call freqResult
end on

on ui_control($scaleRootSelect)
	set_text($scaleRootLabel, "Root: " & !octaveNotes[$scaleRootSelect])
	call scaleResult
end on

on ui_control($scaleTypeSelect)
	set_text($scaleTypeLabel, "Scale: " & !scaleStrings[$scaleTypeSelect])
	call scaleResult
end on

on ui_control ($waveDndA)
	if ($NI_MOUSE_EVENT_TYPE = $NI_MOUSE_EVENT_TYPE_DROP)
	  wait_async(set_sample(%NI_USER_ZONE_IDS[0], !NI_DND_ITEMS_AUDIO[0]))
	  wait_async(detect_pitch(%NI_USER_ZONE_IDS[0], ~pitch))
	  wait_async(detect_rms(%NI_USER_ZONE_IDS[0], ~rms))
	  wait_async(detect_peak(%NI_USER_ZONE_IDS[0], ~peak))
	  wait_async(detect_loudness(%NI_USER_ZONE_IDS[0], ~loudness))
	  wait_async(detect_sample_type(%NI_USER_ZONE_IDS[0], $sample_type))
	  if ($sample_type = $NI_DETECT_SAMPLE_TYPE_DRUM)
	     wait_async(detect_drum_type(%NI_USER_ZONE_IDS[0], $drum_type))           
	  else
	     wait_async(detect_instrument_type(%NI_USER_ZONE_IDS[0], $instrument_type))
	  end if
	end if
	@sample_path := get_sample(%NI_USER_ZONE_IDS[0], $NI_FILE_NAME)
	wait_async(set_sample(%NI_USER_ZONE_IDS[0], ""))

	set_text($mirPitch, "Pitch: " & ~pitch)
	set_text($mirPeak, "Peak: " & ~peak)
	set_text($mirRMS, "RMS: " & ~rms)
	set_text($mirLoudness, "Loudness: " & ~loudness)


	if ($sample_type = $NI_DETECT_SAMPLE_TYPE_DRUM)
	 set_text($mirType, "Drum Type: " & !mirDrumTypesStrings[$drum_type])    
	else
	 set_text($mirType, "Instrument Type: " & !mirInstrumentTypesStrings[$instrument_type])
	end if            

end on
