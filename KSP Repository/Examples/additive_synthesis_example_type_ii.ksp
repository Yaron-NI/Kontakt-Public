
{***********************************************
Additive Synthesis Example Type II
Author: Native Instruments
Written by: Yaron Eshkar
Modified: July 31, 2021
*************************************************}

{ 1 Sine partial per group for a total of 16 partials in 16 groups }

on init

    message("") { Reset the messages }

    declare @instrumentName { Declare the instrument name variable }
    @instrumentName := "Additive Synth" { Set the instrument name string }

    declare ui_label $labelInstrumentName (8, 1) { Label for the full instrument name }
    set_script_title(@instrumentName) { Set the script title }
    set_snapshot_type(1) { Don't init on snapshots }

    if ($NI_KONTAKT_IS_HEADLESS = 0) { Check if running headless, only do GUI stuff if on desktop }
        make_perfview { Make the performance view }
        set_ui_height(8) { Set the height of the UI }
        set_ui_color(000000h) { Background to black }
        set_control_par_str($INST_ICON_ID, $CONTROL_PAR_PICTURE, "icon") { instrument icon }
        set_text($labelInstrumentName,  @instrumentName) { Set the instrument name label }
        set_control_par(get_ui_id($labelInstrumentName), $CONTROL_PAR_TEXT_ALIGNMENT, 1) { Center the text }
        set_control_par(get_ui_id($labelInstrumentName), $CONTROL_PAR_WIDTH, 300) { Make the label wide enough }
        set_control_par(get_ui_id($labelInstrumentName), $CONTROL_PAR_HIDE, $HIDE_PART_BG) { Hide the label backgrounds }
        move_control_px($labelInstrumentName, 175, 300) { Position the label }
    else { If running headless then hide all the controls }
        set_control_par(get_ui_id($labelInstrumentName), $CONTROL_PAR_HIDE, $HIDE_WHOLE_CONTROL) { Hide the instrument name label }
    end if
    
    declare $i { Loop counter }
    declare $touchedControl { Variable for keeping track of the last touched control }
    declare const $maxVolume := 300000 { Maximum volume of each partial }
    declare const $numSliders := 16

    declare $sliderOffsetX := 20
    declare $sliderOffsetY := 20

    declare ui_panel $slidersPanel
    declare $slidersPanelID := get_ui_id($slidersPanel)

    declare ui_slider $harmVol1(0,$maxVolume)
    declare ui_slider $harmVol2(0,$maxVolume)
    declare ui_slider $harmVol3(0,$maxVolume)
    declare ui_slider $harmVol4(0,$maxVolume)
    declare ui_slider $harmVol5(0,$maxVolume)
    declare ui_slider $harmVol6(0,$maxVolume)
    declare ui_slider $harmVol7(0,$maxVolume)
    declare ui_slider $harmVol8(0,$maxVolume)
    declare ui_slider $harmVol9(0,$maxVolume)
    declare ui_slider $harmVol10(0,$maxVolume)
    declare ui_slider $harmVol11(0,$maxVolume)
    declare ui_slider $harmVol12(0,$maxVolume)
    declare ui_slider $harmVol13(0,$maxVolume)
    declare ui_slider $harmVol14(0,$maxVolume)
    declare ui_slider $harmVol15(0,$maxVolume)
    declare ui_slider $harmVol16(0,$maxVolume)

    declare ui_switch $harmActive
    declare $harmActiveID := get_ui_id($harmActive)

    make_persistent($harmActive)
    make_persistent($harmVol1)
    make_persistent($harmVol2)
    make_persistent($harmVol3)
    make_persistent($harmVol4)
    make_persistent($harmVol5)
    make_persistent($harmVol6)
    make_persistent($harmVol7)
    make_persistent($harmVol8)
    make_persistent($harmVol9)
    make_persistent($harmVol10)
    make_persistent($harmVol11)
    make_persistent($harmVol12)
    make_persistent($harmVol13)
    make_persistent($harmVol14)
    make_persistent($harmVol15)
    make_persistent($harmVol16)

    declare %harmID[$numSliders] { Array for the control GUI IDs }
    $i := 0
    while($i<$numSliders)
        %harmID[$i] := get_ui_id($harmVol1) + $i { Put the controls in the GUI ID array }
        set_control_par(%harmID[$i],$CONTROL_PAR_PARENT_PANEL,$slidersPanelID)
        set_control_par(%harmID[$i],$CONTROL_PAR_AUTOMATION_ID,$i)
        set_control_par_str(%harmID[$i],$CONTROL_PAR_AUTOMATION_NAME,"Vol " & $i+1)
        if($i<8)
            set_control_par(%harmID[$i],$CONTROL_PAR_POS_X,$sliderOffsetX)
            set_control_par(%harmID[$i],$CONTROL_PAR_POS_Y,$sliderOffsetY*$i)
        else
            set_control_par(%harmID[$i],$CONTROL_PAR_POS_X,$sliderOffsetX*6)
            set_control_par(%harmID[$i],$CONTROL_PAR_POS_Y,$sliderOffsetY*($i-8))
        end if
        inc($i)
    end while

    set_control_par($slidersPanelID,$CONTROL_PAR_POS_X,175)
    set_control_par($slidersPanelID,$CONTROL_PAR_POS_Y,10)

    set_control_par($harmActiveID,$CONTROL_PAR_POS_X,100)
    set_control_par($harmActiveID,$CONTROL_PAR_POS_Y,10)

    set_control_par($harmActiveID,$CONTROL_PAR_AUTOMATION_ID,$numSliders)
    set_control_par_str($harmActiveID,$CONTROL_PAR_AUTOMATION_NAME,"Active Hrm")

end on

function setActiveHarmonics
    if($harmActive=0)
        $i := 8
        while($i<$numSliders)
            set_control_par(%harmID[$i],$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
            inc($i)
        end while
        set_control_par_str($harmActiveID,$CONTROL_PAR_TEXT,"8 Harmonics")
    else
        $i := 8
        while($i<$numSliders)
            set_control_par(%harmID[$i],$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
            inc($i)
        end while
        set_control_par_str($harmActiveID,$CONTROL_PAR_TEXT,"16 Harmonics")
    end if
end function

function setGroupVolume { Set the selected partial volume }
    set_engine_par($ENGINE_PAR_VOLUME,get_control_par(%harmID[$touchedControl],$CONTROL_PAR_VALUE),$touchedControl,-1,-1) { Set the volume }
end function

{ executed after the init callback or whenever a snapshot has been loaded }
on persistence_changed
    call setActiveHarmonics
    $i := 0
    while ($i<$numSliders)
        $touchedControl := $i
        call setGroupVolume
        inc($i)
    end while
end on

on ui_control ($harmActive)
    call setActiveHarmonics
end on

{ note callback, executed whenever a note on message is received }
on note
    disallow_group($ALL_GROUPS)
    if($harmActive=0)
        $i := 0
        while($i<8)
            allow_group($i)
            inc($i)
        end while
    else 
        allow_group($ALL_GROUPS)
    end if
end on


on ui_control($harmVol1)
    $touchedControl := 0
    call setGroupVolume
end on
on ui_control($harmVol2)
    $touchedControl := 1
    call setGroupVolume
end on
on ui_control($harmVol3)
    $touchedControl := 2
    call setGroupVolume
end on
on ui_control($harmVol4)
    $touchedControl := 3
    call setGroupVolume
end on
on ui_control($harmVol5)
    $touchedControl := 4
    call setGroupVolume
end on
on ui_control($harmVol6)
    $touchedControl := 5
    call setGroupVolume
end on
on ui_control($harmVol7)
    $touchedControl := 6
    call setGroupVolume
end on
on ui_control($harmVol8)
    $touchedControl := 7
    call setGroupVolume
end on
on ui_control($harmVol9)
    $touchedControl := 8
    call setGroupVolume
end on
on ui_control($harmVol10)
    $touchedControl := 9
    call setGroupVolume
end on
on ui_control($harmVol11)
    $touchedControl := 10
    call setGroupVolume
end on
on ui_control($harmVol12)
    $touchedControl := 11
    call setGroupVolume
end on
on ui_control($harmVol13)
    $touchedControl := 12
    call setGroupVolume
end on
on ui_control($harmVol14)
    $touchedControl := 13
    call setGroupVolume
end on
on ui_control($harmVol15)
    $touchedControl := 14
    call setGroupVolume
end on
on ui_control($harmVol16)
    $touchedControl := 15
    call setGroupVolume
end on