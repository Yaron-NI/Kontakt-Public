{***********************************************
MIDI Export Areas Example
Author: Faxi Nadu
Written by: Yaron Eshkar
Modified: May 17, 2021
*************************************************}

{ A MIDI file must be preset in the folder where the NKI is running form }

on init
    declare @midiFile { Variable for the file name }
    @midiFile := "/my_midi.mid" { The file name string }
    message("") { Reset the messages }
    make_perfview { Make the performance view }
    declare $i { Variable for looping }
    declare const $dragAreas := 4 { How many dragable areas }
    declare ui_label $label1 (1,1) { Label and drag area 1 }
    declare ui_label $label2 (1,1) { Label and drag area 2 }
    declare ui_label $label3 (1,1) { Label and drag area 3 }
    declare ui_label $label4 (1,1) { Label and drag area 4 }
    declare %labelID[$dragAreas] { Get the UI IDs of the labels }
        %labelID[0] := get_ui_id($label1)
        %labelID[1] := get_ui_id($label2)
        %labelID[2] := get_ui_id($label3)
        %labelID[3] := get_ui_id($label4)
    declare !midiTracks[$dragAreas] { Text for the labels }
        !midiTracks[0] := "Synth1" { Label 1 }
        !midiTracks[1] := "Synth2" { Label 2 }
        !midiTracks[2] := "Bass" { Label 3 }
        !midiTracks[3] := "Melody" { Label 4 }
    mf_insert_file(get_folder($GET_FOLDER_PATCH_DIR) & @midiFile,0,0,0) { Parse the midi file }
    mf_set_num_export_areas($dragAreas+1) { Declare the expor areas, area index 0 is always the working area }
    $i := 0
    while($i<$dragAreas) { Repeat for each label }
        set_control_par(%labelID[$i],$CONTROL_PAR_DND_BEHAVIOUR,1) { Make the labels dragable }
        set_control_par(%labelID[$i],$CONTROL_PAR_MIDI_EXPORT_AREA_IDX, $i+1) { Set the export area of each label }
        set_control_par_str(%labelID[$i],$CONTROL_PAR_TEXT,!midiTracks[$i]) { Name the labels }
        mf_set_export_area(!midiTracks[$i],-1,-1,$i,$i) { Prepare the export areas }
        mf_copy_export_area($i+1) { Copt the working area to the drageable export areas }
        inc($i)
    end while
end on