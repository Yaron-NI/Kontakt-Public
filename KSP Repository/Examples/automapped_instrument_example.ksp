{***********************************************
Automapped Instrument Example
Author: Native Instruments
Written by: Yaron Eshkar
Modified: January 21,  2022
*************************************************}

{ 
- Do not delete _scan.wav - samples folder needs to include a dummy file with that name
- Add samples to the samples folder
- Change the variable in samples_count.nka to the number of samples in the folder
- Load the NKI
}

on init
    message( "" ) { Reset the messages }
    make_perfview { Make the performance view }
    set_ui_height(1) { Set the UI height }
	set_num_user_zones(127) { Declare a zone for each note }
    declare $cur_file { Variable for looping }
    declare $i { Variable for looping }
    $i := 0
    while($i<127) { Set zone params }
        set_zone_par(%NI_USER_ZONE_IDS[$i],$ZONE_PAR_HIGH_VELO,127) { Cover entire velocity range }
        set_zone_par(%NI_USER_ZONE_IDS[$i],$ZONE_PAR_ROOT_KEY,$i)  { Root same as note number }
        set_zone_par(%NI_USER_ZONE_IDS[$i],$ZONE_PAR_HIGH_KEY,$i) { Low key same as note number }
        set_zone_par(%NI_USER_ZONE_IDS[$i],$ZONE_PAR_LOW_KEY,$i) { High key same as note number }
    end while
    declare @basepath { Base path for the browser }
	@basepath :=  get_folder($GET_FOLDER_PATCH_DIR) & "Samples/" { Set the base path }
	declare @file_path { Full path to the selected file }
	declare ui_file_selector $file_browser { Browser for showing the found files }
	declare $browser_id { Browser UI ID }
	$browser_id := get_ui_id($file_browser) { Get the browser ID }
        set_control_par($browser_id,$CONTROL_PAR_FILE_TYPE,$NI_FILE_TYPE_AUDIO) { Browser should only display audio files }
        set_control_par_str($browser_id,$CONTROL_PAR_BASEPATH,@basepath) { Set the browser base path }
        set_control_par_str($browser_id,$CONTROL_PAR_FILEPATH,@basepath & "_scan.wav") { This forces the browser to load with the last file selected }
        set_control_par($browser_id,$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL) { Hide the browser }
    declare ui_switch $map_samples { Dummy switch }
        set_control_par(get_ui_id($map_samples),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL) { Hide the switch }
    declare %samples_count[1] { Count of samples in the folder }
        load_array(%samples_count,2) { Loaded from resources/data folder }
    declare ui_label $status(1,1) { Load status label }
end on 

function empty_zones { Empty the zones }
    $i := 0
    while($i<127)
        wait_async(set_sample(%NI_USER_ZONE_IDS[$i],"")) {Set the sample in the zone }
        inc($i)
    end while
end function

function set_file { Set the file in the user zone }
    wait_async(set_sample(%NI_USER_ZONE_IDS[$cur_file],@file_path)) {Set the sample in the zone }
end function

on ui_control($file_browser) { Browser }
	@file_path := fs_get_filename($browser_id,2) { Get the path to the selected file }
	call set_file 
end on

on persistence_changed { After loading the instrument, call the mapping functions }
    set_text($status,"Loading") { Inform the use the instrument is not ready }
    call empty_zones { Empty what was there before }
    set_controller(127,127) { Force triggering map_samples ui_callback. Controll must be mapped to CC 127 }
end on

on ui_control($map_samples) { Dummy control to allow triggering fs_navigate }
    if($map_samples=1)
        $cur_file := 0
        while($cur_file<%samples_count[0])
            fs_navigate($browser_id,1) { Can only be triggered in UI callback }
            wait(100000) { Unreliable without a wait command }
            inc($cur_file)
        end while
        $map_samples := 0
    end if
    set_text($status,"Loaded") { Inform the user the instrument is ready }
end on


