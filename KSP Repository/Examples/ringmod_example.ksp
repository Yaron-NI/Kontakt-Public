{***********************************************
Ring Mod Example
Author: Native Instruments
Written by: Yaron Eshkar
Modified: June 13, 2022
*************************************************}

on init

    message("")
    set_script_title("Ring Mod Example")
    set_ui_height(3)
    make_perfview

    declare const $spacing_x := 100
    declare const $spacing_y := 20

    declare const $num_controls := 12

    declare $i
    declare $touched

    declare const $group := -1
    declare const $slot := 0
    declare const $generic := 1

    { LFO Sync Variables }
    declare const $NUM_MOD_SYNC_TIMES := 34
    declare const $LFO_DIV := 1000000 / ($NUM_MOD_SYNC_TIMES-1)
    declare %mod_sync_unit[$NUM_MOD_SYNC_TIMES] := ($NI_SYNC_UNIT_WHOLE, $NI_SYNC_UNIT_WHOLE, $NI_SYNC_UNIT_WHOLE, $NI_SYNC_UNIT_WHOLE, $NI_SYNC_UNIT_WHOLE, $NI_SYNC_UNIT_WHOLE, $NI_SYNC_UNIT_WHOLE, $NI_SYNC_UNIT_WHOLE, $NI_SYNC_UNIT_WHOLE, $NI_SYNC_UNIT_WHOLE, $NI_SYNC_UNIT_WHOLE, $NI_SYNC_UNIT_WHOLE, $NI_SYNC_UNIT_QUARTER, $NI_SYNC_UNIT_WHOLE_TRIPLET, $NI_SYNC_UNIT_HALF, $NI_SYNC_UNIT_8TH, $NI_SYNC_UNIT_HALF_TRIPLET, $NI_SYNC_UNIT_QUARTER, $NI_SYNC_UNIT_16TH, $NI_SYNC_UNIT_QUARTER_TRIPLET, $NI_SYNC_UNIT_8TH, $NI_SYNC_UNIT_32ND, $NI_SYNC_UNIT_8TH_TRIPLET, $NI_SYNC_UNIT_16TH, $NI_SYNC_UNIT_64TH, $NI_SYNC_UNIT_16TH_TRIPLET, $NI_SYNC_UNIT_32ND, $NI_SYNC_UNIT_256TH, $NI_SYNC_UNIT_32ND_TRIPLET, $NI_SYNC_UNIT_64TH, $NI_SYNC_UNIT_256TH, $NI_SYNC_UNIT_64TH, $NI_SYNC_UNIT_256TH, $NI_SYNC_UNIT_256TH)
    declare !mod_sync_string[$NUM_MOD_SYNC_TIMES]
        !mod_sync_string[0] := "12/1"
        !mod_sync_string[1] := "11/1"
        !mod_sync_string[2] := "10/1"
        !mod_sync_string[3] := "9/1"
        !mod_sync_string[4] := "8/1"
        !mod_sync_string[5] := "7/1"
        !mod_sync_string[6] := "6/1"
        !mod_sync_string[7] := "5/1"
        !mod_sync_string[8] := "4/1"
        !mod_sync_string[9] := "3/1"
        !mod_sync_string[10] := "2/1"
        !mod_sync_string[11] := "1/1"
        !mod_sync_string[12] := "1/2D"
        !mod_sync_string[13] := "1/1T"
        !mod_sync_string[14] := "1/2"
        !mod_sync_string[15] := "1/4D"
        !mod_sync_string[16] := "1/2T"
        !mod_sync_string[17] := "1/4"
        !mod_sync_string[18] := "1/8D"
        !mod_sync_string[19] := "1/4T"
        !mod_sync_string[20] := "1/8"
        !mod_sync_string[21] := "1/16D"
        !mod_sync_string[22] := "1/8T"
        !mod_sync_string[23] := "1/16"
        !mod_sync_string[24] := "1/32D"
        !mod_sync_string[25] := "1/16T"
        !mod_sync_string[26] := "1/32"
        !mod_sync_string[27] := "1/64D"
        !mod_sync_string[28] := "1/32T"
        !mod_sync_string[29] := "1/64"
        !mod_sync_string[30] := "1/128D"
        !mod_sync_string[31] := "1/64T"
        !mod_sync_string[32] := "1/128"
        !mod_sync_string[33] := "1/256"
    declare %mod_sync_value[$NUM_MOD_SYNC_TIMES] := (0, 90909, 181818, 272727, 363636, 454545, 545454, 636363, 727272, 818181, 909090, 999999, 818181, 999999, 999999, 818181, 999999, 999999, 818181, 999999, 999999, 818181, 999999, 999999, 818181, 999999, 999999, 545454, 999999, 999999, 818181, 999999, 909090, 999999)          

    declare %engine_pars[9]
        %engine_pars[0] := $ENGINE_PAR_RINGMOD_RING
        %engine_pars[1] := $ENGINE_PAR_RINGMOD_FM
        %engine_pars[2] := $ENGINE_PAR_RINGMOD_FREQUENCY
        %engine_pars[3] := $ENGINE_PAR_RINGMOD_EDGE
        %engine_pars[4] := $ENGINE_PAR_RINGMOD_LFO_AMOUNT
        %engine_pars[5] := $ENGINE_PAR_RINGMOD_LFO_RATE
        %engine_pars[6] := $ENGINE_PAR_RINGMOD_FAST_MODE
        %engine_pars[7] := $ENGINE_PAR_RINGMOD_LFO_WAVE

    declare !labels[6]
        !labels[0] := "Ring: "
        !labels[1] := "FM: "
        !labels[2] := "Freq: "
        !labels[3] := "Edge: "
        !labels[4] := "LFO A: "
        !labels[5] := "LFO R: "

    declare !types[6]
        !types[0] := "%"
        !types[1] := "%"
        !types[2] := "Hz"
        !types[3] := "%"
        !types[4] := "%"
        !types[5] := "Hz"

    declare ui_switch $fast
        set_text($fast,"Fast Mode")    

    declare ui_menu $wave
        add_menu_item($wave,"Sine",$NI_RINGMOD_LFO_WAVE_SINE)
        add_menu_item($wave,"Square",$NI_RINGMOD_LFO_WAVE_SQUARE)

    declare ui_switch $sync
        set_text($sync,"Sync")

    declare ui_panel $controls

    declare ui_slider $ring(0,1000000)
    declare ui_slider $fm(0,1000000)
    declare ui_slider $freq(0,1000000)
    declare ui_slider $edge(0,1000000)
    declare ui_slider $amount(0,1000000)
    declare ui_slider $rate(0,1000000)

    declare ui_label $ring_label(1,1)
    declare ui_label $fm_label(1,1)
    declare ui_label $freq_label(1,1)
    declare ui_label $edge_label(1,1)
    declare ui_label $amount_label(1,1)
    declare ui_label $rate_label(1,1)

    make_persistent($ring)
    make_persistent($fm)
    make_persistent($freq)
    make_persistent($edge)
    make_persistent($amount)
    make_persistent($rate)
    make_persistent($fast)
    make_persistent($wave)
    make_persistent($sync)

    set_engine_par($ENGINE_PAR_EFFECT_TYPE,$EFFECT_TYPE_RINGMOD,$group,$slot,$generic)

    declare %controlID[$num_controls]

    $i := 0
    while($i<$num_controls)
        %controlID[$i] := get_ui_id($ring)+$i
        set_control_par(%controlID[$i],$CONTROL_PAR_PARENT_PANEL,get_ui_id($controls))
        select ($i)
            case 0 to 5
                set_control_par(%controlID[$i],$CONTROL_PAR_POS_X,$spacing_x * $i)
            case 6 to 11
                set_control_par(%controlID[$i],$CONTROL_PAR_POS_X,$spacing_x * ($i-6))
                set_control_par(%controlID[$i],$CONTROL_PAR_POS_Y,$spacing_y)
        end select
        inc($i)
    end while

    set_control_par(get_ui_id($controls),$CONTROL_PAR_POS_X,25)
    set_control_par(get_ui_id($controls),$CONTROL_PAR_POS_Y,50)

    set_control_par(get_ui_id($fast),$CONTROL_PAR_POS_X,150)
    set_control_par(get_ui_id($fast),$CONTROL_PAR_POS_Y,25)

    set_control_par(get_ui_id($wave),$CONTROL_PAR_POS_X,250)
    set_control_par(get_ui_id($wave),$CONTROL_PAR_POS_Y,25)

    set_control_par(get_ui_id($sync),$CONTROL_PAR_POS_X,350)
    set_control_par(get_ui_id($sync),$CONTROL_PAR_POS_Y,25)
end on

function set_controls
    if($touched<6)
        if($touched<5)
            set_engine_par(%engine_pars[$touched],get_control_par(%controlID[$touched],$CONTROL_PAR_VALUE),$group,$slot,$generic)
            set_control_par_str(%controlID[$touched+6],$CONTROL_PAR_TEXT,!labels[$touched] & get_engine_par_disp(%engine_pars[$touched],$group,$slot,$generic) & !types[$touched])
        else
            if($sync=0)
                set_engine_par($ENGINE_PAR_RINGMOD_LFO_RATE_UNIT,$NI_SYNC_UNIT_ABS,$group,$slot,$generic)
                set_engine_par(%engine_pars[$touched],get_control_par(%controlID[$touched],$CONTROL_PAR_VALUE),$group,$slot,$generic)
                set_control_par_str(%controlID[$touched+6],$CONTROL_PAR_TEXT,!labels[$touched] & get_engine_par_disp(%engine_pars[$touched],$group,$slot,$generic) & !types[$touched])
            else
                set_engine_par($ENGINE_PAR_RINGMOD_LFO_RATE_UNIT,%mod_sync_unit[get_control_par(%controlID[$touched],$CONTROL_PAR_VALUE) / $LFO_DIV],$group,$slot,$generic)
                set_engine_par($ENGINE_PAR_PSYDL_TIME,%mod_sync_unit[get_control_par(%controlID[$touched],$CONTROL_PAR_VALUE) / $LFO_DIV],$group,$slot,$generic)
                set_control_par_str(%controlID[$touched+6],$CONTROL_PAR_TEXT,!mod_sync_string[get_control_par(%controlID[$touched],$CONTROL_PAR_VALUE) / $LFO_DIV])
            end if
        end if                
    else
        if($touched=6)
            set_engine_par($ENGINE_PAR_RINGMOD_FAST_MODE,$fast,$group,$slot,$generic)
        else
            set_engine_par($ENGINE_PAR_RINGMOD_LFO_WAVE,$wave,$group,$slot,$generic)
        end if
    end if
end function

function set_all_controls
    $touched := 0 
    while($touched<6)
        call set_controls
        inc($touched)
    end while
end function

on persistence_changed
    call set_all_controls
end on

on ui_control($ring)
    $touched := 0
    call set_controls
end on

on ui_control($fm)
    $touched := 1
    call set_controls
end on

on ui_control($freq)
    $touched := 2
    call set_controls
end on

on ui_control($edge)
    $touched := 3
    call set_controls
end on

on ui_control($amount)
    $touched := 4
    call set_controls
end on

on ui_control($rate)
    $touched := 5
    call set_controls
end on

on ui_control($sync)
    $touched := 5
    call set_controls
end on

on ui_control($fast)
    $touched := 6
    call set_controls
    $touched := 2
    call set_controls
end on

on ui_control($wave)
    $touched := 7
    call set_controls
end on

